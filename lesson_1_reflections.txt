How did viewing a diff between two versions of a file help you see the bug that was introduced?

	The changes made were easily visible with the + and - operators on the lines which had been modified. So rather than perusing each character on each line, diff sped up the debug process.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    Helpful during the debug process to identify what was changed and when.
    Can see how features were developed and how the preceding code was modified.
    Copy/Paste old code from earlier versions of the same or other files.
    Return to the previous version automatically with a given "revert" or undo tool.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

    The advantage of manual commits is that you can do so at a point when it makes logical sense to do so. One might make a a tiny change to rectify a typo or to add a new line, or it might be bigger such as adding multiple objects, and so a commit in each case is distinct for it's purpose or time-spent. The retrospective value of making a commit is that you can easily identify where a change was made. If versions were systematically saved automatically it would not ease the purpose of using version control in the first place: Changes might spread across commits and overlaps with others. 

    A big con is in human error. You may forget to commit and inadvertently combine changes that don't relate when you do. Further, you risk losing work to crashes and accidents if your rely on manual saving. Automation of saving removes the burden of remembering. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    GD is non-code version control and files will mostly open stand-alone, whereas with applications there are often co-dependent sub-files which manually or automatically need updating.

How can you use the commands git log and git diff to view the history of files?

    Git log shows a list of commits made to the file, while git diff can be used to compare 2 commits (in this example anyway) in that file. 

How might using version control make you more confident to make changes that could break something?

	Just knowing that code is saved would free me to keep making changes and improvements with the knowledge the I can return to an earlier version of the code and run or compare that code. I can see what broken something. Even more helpful when large commits have been made or reviewing code written by other programmers. 

Now that you have your workspace set up, what do you want to try using Git for?

	compare differences in exaple Gists provided by Udacity and my own applications.